Write-Host "⚡ Starting LittleMomo App Fix & Build Script ⚡" -ForegroundColor Cyan
Write-Host "Step 1: Fixing paths in local.properties..." -ForegroundColor Yellow

# Fix local.properties
$localPropsPath = "android/local.properties"
$localProps = Get-Content $localPropsPath
$sdkDir = $localProps | Where-Object { $_ -match "sdk.dir" } | ForEach-Object { $_ -replace "\\", "/" }
$flutterSdk = $localProps | Where-Object { $_ -match "flutter.sdk" } | ForEach-Object { $_ -replace "\\", "/" }

@"
## This file is automatically generated by Flutter.
## Used by Flutter tool to assess capabilities and perform upgrades etc.
##
## This file should be version controlled and should not be manually edited.

# Use forward slashes to avoid issues with spaces
$sdkDir
$flutterSdk
flutter.buildMode=debug
flutter.versionName=1.0.0
flutter.versionCode=1
"@ | Set-Content $localPropsPath

Write-Host "Local properties file updated!" -ForegroundColor Green

# Fixing app/build.gradle
Write-Host "Step 2: Updating Android Gradle configuration..." -ForegroundColor Yellow
$appBuildGradlePath = "android/app/build.gradle"
$content = Get-Content $appBuildGradlePath -Raw
$updatedContent = $content -replace "sourceCompatibility = JavaVersion.VERSION_11", "sourceCompatibility JavaVersion.VERSION_1_8"
$updatedContent = $updatedContent -replace "targetCompatibility = JavaVersion.VERSION_11", "targetCompatibility JavaVersion.VERSION_1_8"
$updatedContent = $updatedContent -replace "jvmTarget = '11'", "jvmTarget = '1.8'"

# Add archivesBaseName setting
$updatedContent = $updatedContent -replace "flutter {", @"
// Fix for path with spaces
project.archivesBaseName = "littlemomo"

flutter {
"@

$updatedContent | Set-Content $appBuildGradlePath

# Fix gradle.properties
Write-Host "Step 3: Updating Gradle properties..." -ForegroundColor Yellow
@"
org.gradle.jvmargs=-Xmx2048M
android.useAndroidX=true
android.enableJetifier=true
android.defaults.buildfeatures.buildconfig=true
android.nonTransitiveRClass=false
org.gradle.parallel=true
"@ | Set-Content "android/gradle.properties"

# Clean and rebuild
Write-Host "Step 4: Cleaning project..." -ForegroundColor Yellow
flutter clean

Write-Host "Step 5: Getting dependencies..." -ForegroundColor Yellow
flutter pub get

Write-Host "Step 6: Building debug APK..." -ForegroundColor Yellow
flutter build apk --debug

if ($LASTEXITCODE -eq 0) {
    Write-Host "✅ Success! APK built successfully at: build\app\outputs\flutter-apk\app-debug.apk" -ForegroundColor Green
    
    # Ask if user wants to install the APK
    $installChoice = Read-Host "Do you want to install the APK on a connected device? (y/n)"
    if ($installChoice -eq "y") {
        Write-Host "Installing APK..." -ForegroundColor Yellow
        & adb install -r "build\app\outputs\flutter-apk\app-debug.apk"
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "✅ APK installed successfully!" -ForegroundColor Green
        } else {
            Write-Host "❌ Failed to install APK. Make sure a device is connected and ADB is in your PATH." -ForegroundColor Red
        }
    }
} else {
    Write-Host "❌ Build failed. Please check the error messages above." -ForegroundColor Red
}

Write-Host "Press any key to exit..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") 